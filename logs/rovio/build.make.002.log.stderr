CMakeFiles/feature_tracker_node.dir/src/feature_tracker_node.cpp.o: In function `LWF::NormalVectorElement::get(unsigned int) const':
feature_tracker_node.cpp:(.text._ZNK3LWF19NormalVectorElement3getEj[_ZNK3LWF19NormalVectorElement3getEj]+0x3e): undefined reference to `google::LogMessageFatal::LogMessageFatal(char const*, int)'
feature_tracker_node.cpp:(.text._ZNK3LWF19NormalVectorElement3getEj[_ZNK3LWF19NormalVectorElement3getEj]+0x46): undefined reference to `google::LogMessage::stream()'
feature_tracker_node.cpp:(.text._ZNK3LWF19NormalVectorElement3getEj[_ZNK3LWF19NormalVectorElement3getEj]+0x63): undefined reference to `google::LogMessageFatal::~LogMessageFatal()'
CMakeFiles/feature_tracker_node.dir/src/feature_tracker_node.cpp.o: In function `LWF::NormalVectorElement::get(unsigned int)':
feature_tracker_node.cpp:(.text._ZN3LWF19NormalVectorElement3getEj[_ZN3LWF19NormalVectorElement3getEj]+0x3e): undefined reference to `google::LogMessageFatal::LogMessageFatal(char const*, int)'
feature_tracker_node.cpp:(.text._ZN3LWF19NormalVectorElement3getEj[_ZN3LWF19NormalVectorElement3getEj]+0x46): undefined reference to `google::LogMessage::stream()'
feature_tracker_node.cpp:(.text._ZN3LWF19NormalVectorElement3getEj[_ZN3LWF19NormalVectorElement3getEj]+0x63): undefined reference to `google::LogMessageFatal::~LogMessageFatal()'
collect2: error: ld returned 1 exit status
make[2]: *** [/home/ubuntu/coding/ethz_asl_UAV_autonomous/devel/.private/rovio/lib/rovio/feature_tracker_node] Error 1
make[1]: *** [CMakeFiles/feature_tracker_node.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ImgUpdate.hpp:40:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:35[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_node.cpp:41[m[K:
/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ZeroVelocityUpdate.hpp: In instantiation of â€˜[01m[Kclass rovio::ZeroVelocityUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >[m[Kâ€™:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ImgUpdate.hpp:217:35:[m[K   required from â€˜[01m[Kclass rovio::ImgUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/FilterBase.hpp:90:64:[m[K   required from â€˜[01m[Kclass LWF::FilterBase<rovio::ImuPrediction<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::ImgUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::PoseUpdate<rovio::FilterState<25u, 4, 6, 1, 0>, -1, -1>, rovio::VelocityUpdate<rovio::FilterState<25u, 4, 6, 1, 0> > >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:47:7:[m[K   required from â€˜[01m[Kclass rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioScene.hpp:41:42:[m[K   required from â€˜[01m[Kclass rovio::RovioScene<rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> > >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_node.cpp:80:36:[m[K   required from here
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ZeroVelocityUpdate.hpp:144:8:[m[K [01;31m[Kerror: [m[Kconflicting return type specified for â€˜[01m[Kvoid rovio::ZeroVelocityUpdate<FILTERSTATE>::evalInnovation(rovio::ZeroVelocityUpdate<FILTERSTATE>::mtInnovation&, const mtState&, const mtNoise&) const [with FILTERSTATE = rovio::FilterState<25u, 4, 6, 1, 0>; rovio::ZeroVelocityUpdate<FILTERSTATE>::mtInnovation = rovio::ZeroVelocityInnovation<rovio::State<25u, 4, 6, 1, 0> >; rovio::ZeroVelocityUpdate<FILTERSTATE>::mtState = rovio::State<25u, 4, 6, 1, 0>; rovio::ZeroVelocityUpdate<FILTERSTATE>::mtNoise = rovio::ZeroVelocityUpdateNoise<rovio::State<25u, 4, 6, 1, 0> >][m[Kâ€™
   void evalInnovation(mtInnovation& y, const mtState& state, const mtNoise& noise) const{
[01;32m[K        ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ImgUpdate.hpp:33:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:35[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_node.cpp:41[m[K:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/Update.hpp:158:16:[m[K [01;31m[Kerror: [m[K  overriding â€˜[01m[Kbool LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::evalInnovation(LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtInnovation&, const mtState&, const mtNoise&) const [with Innovation = rovio::ZeroVelocityInnovation<rovio::State<25u, 4, 6, 1, 0> >; FilterState = rovio::FilterState<25u, 4, 6, 1, 0>; Meas = rovio::ZeroVelocityUpdateMeas<rovio::State<25u, 4, 6, 1, 0> >; Noise = rovio::ZeroVelocityUpdateNoise<rovio::State<25u, 4, 6, 1, 0> >; OutlierDetection = rovio::ZeroVelocityOutlierDetection<rovio::State<25u, 4, 6, 1, 0> >; bool isCoupled = false; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtInnovation = rovio::ZeroVelocityInnovation<rovio::State<25u, 4, 6, 1, 0> >; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtState = rovio::State<25u, 4, 6, 1, 0>; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtNoise = rovio::ZeroVelocityUpdateNoise<rovio::State<25u, 4, 6, 1, 0> >][m[Kâ€™
   virtual bool evalInnovation(mtInnovation& y, const mtState& state, const mtNoise& noise) const = 0;
[01;32m[K                ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:35:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_node.cpp:41[m[K:
/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ImgUpdate.hpp: In instantiation of â€˜[01m[Kclass rovio::ImgUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >[m[Kâ€™:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/FilterBase.hpp:90:64:[m[K   required from â€˜[01m[Kclass LWF::FilterBase<rovio::ImuPrediction<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::ImgUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::PoseUpdate<rovio::FilterState<25u, 4, 6, 1, 0>, -1, -1>, rovio::VelocityUpdate<rovio::FilterState<25u, 4, 6, 1, 0> > >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:47:7:[m[K   required from â€˜[01m[Kclass rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioScene.hpp:41:42:[m[K   required from â€˜[01m[Kclass rovio::RovioScene<rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> > >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_node.cpp:80:36:[m[K   required from here
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ImgUpdate.hpp:406:8:[m[K [01;31m[Kerror: [m[Kconflicting return type specified for â€˜[01m[Kvoid rovio::ImgUpdate<FILTERSTATE>::evalInnovation(rovio::ImgUpdate<FILTERSTATE>::mtInnovation&, const mtState&, const mtNoise&) const [with FILTERSTATE = rovio::FilterState<25u, 4, 6, 1, 0>; rovio::ImgUpdate<FILTERSTATE>::mtInnovation = rovio::ImgInnovation<rovio::State<25u, 4, 6, 1, 0> >; rovio::ImgUpdate<FILTERSTATE>::mtState = rovio::State<25u, 4, 6, 1, 0>; rovio::ImgUpdate<FILTERSTATE>::mtNoise = rovio::ImgUpdateNoise<rovio::State<25u, 4, 6, 1, 0> >][m[Kâ€™
   void evalInnovation(mtInnovation& y, const mtState& state, const mtNoise& noise) const{
[01;32m[K        ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ImgUpdate.hpp:33:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:35[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_node.cpp:41[m[K:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/Update.hpp:158:16:[m[K [01;31m[Kerror: [m[K  overriding â€˜[01m[Kbool LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::evalInnovation(LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtInnovation&, const mtState&, const mtNoise&) const [with Innovation = rovio::ImgInnovation<rovio::State<25u, 4, 6, 1, 0> >; FilterState = rovio::FilterState<25u, 4, 6, 1, 0>; Meas = rovio::ImgUpdateMeas<rovio::State<25u, 4, 6, 1, 0> >; Noise = rovio::ImgUpdateNoise<rovio::State<25u, 4, 6, 1, 0> >; OutlierDetection = rovio::ImgOutlierDetection<rovio::State<25u, 4, 6, 1, 0> >; bool isCoupled = false; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtInnovation = rovio::ImgInnovation<rovio::State<25u, 4, 6, 1, 0> >; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtState = rovio::State<25u, 4, 6, 1, 0>; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtNoise = rovio::ImgUpdateNoise<rovio::State<25u, 4, 6, 1, 0> >][m[Kâ€™
   virtual bool evalInnovation(mtInnovation& y, const mtState& state, const mtNoise& noise) const = 0;
[01;32m[K                ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:36:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_node.cpp:41[m[K:
/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/PoseUpdate.hpp: In instantiation of â€˜[01m[Kclass rovio::PoseUpdate<rovio::FilterState<25u, 4, 6, 1, 0>, -1, -1>[m[Kâ€™:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/FilterBase.hpp:90:64:[m[K   required from â€˜[01m[Kclass LWF::FilterBase<rovio::ImuPrediction<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::ImgUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::PoseUpdate<rovio::FilterState<25u, 4, 6, 1, 0>, -1, -1>, rovio::VelocityUpdate<rovio::FilterState<25u, 4, 6, 1, 0> > >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:47:7:[m[K   required from â€˜[01m[Kclass rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioScene.hpp:41:42:[m[K   required from â€˜[01m[Kclass rovio::RovioScene<rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> > >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_node.cpp:80:36:[m[K   required from here
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/PoseUpdate.hpp:227:8:[m[K [01;31m[Kerror: [m[Kconflicting return type specified for â€˜[01m[Kvoid rovio::PoseUpdate<FILTERSTATE, inertialPoseIndex, bodyPoseIndex>::evalInnovation(rovio::PoseUpdate<FILTERSTATE, inertialPoseIndex, bodyPoseIndex>::mtInnovation&, const mtState&, const mtNoise&) const [with FILTERSTATE = rovio::FilterState<25u, 4, 6, 1, 0>; int inertialPoseIndex = -1; int bodyPoseIndex = -1; rovio::PoseUpdate<FILTERSTATE, inertialPoseIndex, bodyPoseIndex>::mtInnovation = rovio::PoseInnovation; rovio::PoseUpdate<FILTERSTATE, inertialPoseIndex, bodyPoseIndex>::mtState = rovio::State<25u, 4, 6, 1, 0>; rovio::PoseUpdate<FILTERSTATE, inertialPoseIndex, bodyPoseIndex>::mtNoise = rovio::PoseUpdateNoise][m[Kâ€™
   void evalInnovation(mtInnovation& y, const mtState& state, const mtNoise& noise) const{
[01;32m[K        ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ImgUpdate.hpp:33:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:35[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_node.cpp:41[m[K:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/Update.hpp:158:16:[m[K [01;31m[Kerror: [m[K  overriding â€˜[01m[Kbool LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::evalInnovation(LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtInnovation&, const mtState&, const mtNoise&) const [with Innovation = rovio::PoseInnovation; FilterState = rovio::FilterState<25u, 4, 6, 1, 0>; Meas = rovio::PoseUpdateMeas; Noise = rovio::PoseUpdateNoise; OutlierDetection = rovio::PoseOutlierDetection; bool isCoupled = false; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtInnovation = rovio::PoseInnovation; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtState = rovio::State<25u, 4, 6, 1, 0>; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtNoise = rovio::PoseUpdateNoise][m[Kâ€™
   virtual bool evalInnovation(mtInnovation& y, const mtState& state, const mtNoise& noise) const = 0;
[01;32m[K                ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:37:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_node.cpp:41[m[K:
/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/VelocityUpdate.hpp: In instantiation of â€˜[01m[Kclass rovio::VelocityUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >[m[Kâ€™:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/FilterBase.hpp:90:64:[m[K   required from â€˜[01m[Kclass LWF::FilterBase<rovio::ImuPrediction<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::ImgUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::PoseUpdate<rovio::FilterState<25u, 4, 6, 1, 0>, -1, -1>, rovio::VelocityUpdate<rovio::FilterState<25u, 4, 6, 1, 0> > >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:47:7:[m[K   required from â€˜[01m[Kclass rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioScene.hpp:41:42:[m[K   required from â€˜[01m[Kclass rovio::RovioScene<rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> > >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_node.cpp:80:36:[m[K   required from here
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/VelocityUpdate.hpp:166:8:[m[K [01;31m[Kerror: [m[Kconflicting return type specified for â€˜[01m[Kvoid rovio::VelocityUpdate<FILTERSTATE>::evalInnovation(rovio::VelocityUpdate<FILTERSTATE>::mtInnovation&, const mtState&, const mtNoise&) const [with FILTERSTATE = rovio::FilterState<25u, 4, 6, 1, 0>; rovio::VelocityUpdate<FILTERSTATE>::mtInnovation = rovio::VelocityInnovation; rovio::VelocityUpdate<FILTERSTATE>::mtState = rovio::State<25u, 4, 6, 1, 0>; rovio::VelocityUpdate<FILTERSTATE>::mtNoise = rovio::VelocityUpdateNoise][m[Kâ€™
   void evalInnovation(mtInnovation& y, const mtState& state, const mtNoise& noise) const{
[01;32m[K        ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ImgUpdate.hpp:33:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:35[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_node.cpp:41[m[K:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/Update.hpp:158:16:[m[K [01;31m[Kerror: [m[K  overriding â€˜[01m[Kbool LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::evalInnovation(LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtInnovation&, const mtState&, const mtNoise&) const [with Innovation = rovio::VelocityInnovation; FilterState = rovio::FilterState<25u, 4, 6, 1, 0>; Meas = rovio::VelocityUpdateMeas; Noise = rovio::VelocityUpdateNoise; OutlierDetection = rovio::VelocityOutlierDetection; bool isCoupled = false; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtInnovation = rovio::VelocityInnovation; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtState = rovio::State<25u, 4, 6, 1, 0>; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtNoise = rovio::VelocityUpdateNoise][m[Kâ€™
   virtual bool evalInnovation(mtInnovation& y, const mtState& state, const mtNoise& noise) const = 0;
[01;32m[K                ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ImgUpdate.hpp:40:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:35[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_rosbag_loader.cpp:37[m[K:
/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ZeroVelocityUpdate.hpp: In instantiation of â€˜[01m[Kclass rovio::ZeroVelocityUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >[m[Kâ€™:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ImgUpdate.hpp:217:35:[m[K   required from â€˜[01m[Kclass rovio::ImgUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/FilterBase.hpp:90:64:[m[K   required from â€˜[01m[Kclass LWF::FilterBase<rovio::ImuPrediction<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::ImgUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::PoseUpdate<rovio::FilterState<25u, 4, 6, 1, 0>, -1, -1>, rovio::VelocityUpdate<rovio::FilterState<25u, 4, 6, 1, 0> > >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:47:7:[m[K   required from â€˜[01m[Kclass rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_rosbag_loader.cpp:87:42:[m[K   required from here
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ZeroVelocityUpdate.hpp:144:8:[m[K [01;31m[Kerror: [m[Kconflicting return type specified for â€˜[01m[Kvoid rovio::ZeroVelocityUpdate<FILTERSTATE>::evalInnovation(rovio::ZeroVelocityUpdate<FILTERSTATE>::mtInnovation&, const mtState&, const mtNoise&) const [with FILTERSTATE = rovio::FilterState<25u, 4, 6, 1, 0>; rovio::ZeroVelocityUpdate<FILTERSTATE>::mtInnovation = rovio::ZeroVelocityInnovation<rovio::State<25u, 4, 6, 1, 0> >; rovio::ZeroVelocityUpdate<FILTERSTATE>::mtState = rovio::State<25u, 4, 6, 1, 0>; rovio::ZeroVelocityUpdate<FILTERSTATE>::mtNoise = rovio::ZeroVelocityUpdateNoise<rovio::State<25u, 4, 6, 1, 0> >][m[Kâ€™
   void evalInnovation(mtInnovation& y, const mtState& state, const mtNoise& noise) const{
[01;32m[K        ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ImgUpdate.hpp:33:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:35[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_rosbag_loader.cpp:37[m[K:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/Update.hpp:158:16:[m[K [01;31m[Kerror: [m[K  overriding â€˜[01m[Kbool LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::evalInnovation(LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtInnovation&, const mtState&, const mtNoise&) const [with Innovation = rovio::ZeroVelocityInnovation<rovio::State<25u, 4, 6, 1, 0> >; FilterState = rovio::FilterState<25u, 4, 6, 1, 0>; Meas = rovio::ZeroVelocityUpdateMeas<rovio::State<25u, 4, 6, 1, 0> >; Noise = rovio::ZeroVelocityUpdateNoise<rovio::State<25u, 4, 6, 1, 0> >; OutlierDetection = rovio::ZeroVelocityOutlierDetection<rovio::State<25u, 4, 6, 1, 0> >; bool isCoupled = false; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtInnovation = rovio::ZeroVelocityInnovation<rovio::State<25u, 4, 6, 1, 0> >; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtState = rovio::State<25u, 4, 6, 1, 0>; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtNoise = rovio::ZeroVelocityUpdateNoise<rovio::State<25u, 4, 6, 1, 0> >][m[Kâ€™
   virtual bool evalInnovation(mtInnovation& y, const mtState& state, const mtNoise& noise) const = 0;
[01;32m[K                ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:35:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_rosbag_loader.cpp:37[m[K:
/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ImgUpdate.hpp: In instantiation of â€˜[01m[Kclass rovio::ImgUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >[m[Kâ€™:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/FilterBase.hpp:90:64:[m[K   required from â€˜[01m[Kclass LWF::FilterBase<rovio::ImuPrediction<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::ImgUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::PoseUpdate<rovio::FilterState<25u, 4, 6, 1, 0>, -1, -1>, rovio::VelocityUpdate<rovio::FilterState<25u, 4, 6, 1, 0> > >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:47:7:[m[K   required from â€˜[01m[Kclass rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_rosbag_loader.cpp:87:42:[m[K   required from here
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ImgUpdate.hpp:406:8:[m[K [01;31m[Kerror: [m[Kconflicting return type specified for â€˜[01m[Kvoid rovio::ImgUpdate<FILTERSTATE>::evalInnovation(rovio::ImgUpdate<FILTERSTATE>::mtInnovation&, const mtState&, const mtNoise&) const [with FILTERSTATE = rovio::FilterState<25u, 4, 6, 1, 0>; rovio::ImgUpdate<FILTERSTATE>::mtInnovation = rovio::ImgInnovation<rovio::State<25u, 4, 6, 1, 0> >; rovio::ImgUpdate<FILTERSTATE>::mtState = rovio::State<25u, 4, 6, 1, 0>; rovio::ImgUpdate<FILTERSTATE>::mtNoise = rovio::ImgUpdateNoise<rovio::State<25u, 4, 6, 1, 0> >][m[Kâ€™
   void evalInnovation(mtInnovation& y, const mtState& state, const mtNoise& noise) const{
[01;32m[K        ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ImgUpdate.hpp:33:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:35[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_rosbag_loader.cpp:37[m[K:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/Update.hpp:158:16:[m[K [01;31m[Kerror: [m[K  overriding â€˜[01m[Kbool LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::evalInnovation(LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtInnovation&, const mtState&, const mtNoise&) const [with Innovation = rovio::ImgInnovation<rovio::State<25u, 4, 6, 1, 0> >; FilterState = rovio::FilterState<25u, 4, 6, 1, 0>; Meas = rovio::ImgUpdateMeas<rovio::State<25u, 4, 6, 1, 0> >; Noise = rovio::ImgUpdateNoise<rovio::State<25u, 4, 6, 1, 0> >; OutlierDetection = rovio::ImgOutlierDetection<rovio::State<25u, 4, 6, 1, 0> >; bool isCoupled = false; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtInnovation = rovio::ImgInnovation<rovio::State<25u, 4, 6, 1, 0> >; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtState = rovio::State<25u, 4, 6, 1, 0>; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtNoise = rovio::ImgUpdateNoise<rovio::State<25u, 4, 6, 1, 0> >][m[Kâ€™
   virtual bool evalInnovation(mtInnovation& y, const mtState& state, const mtNoise& noise) const = 0;
[01;32m[K                ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:36:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_rosbag_loader.cpp:37[m[K:
/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/PoseUpdate.hpp: In instantiation of â€˜[01m[Kclass rovio::PoseUpdate<rovio::FilterState<25u, 4, 6, 1, 0>, -1, -1>[m[Kâ€™:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/FilterBase.hpp:90:64:[m[K   required from â€˜[01m[Kclass LWF::FilterBase<rovio::ImuPrediction<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::ImgUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::PoseUpdate<rovio::FilterState<25u, 4, 6, 1, 0>, -1, -1>, rovio::VelocityUpdate<rovio::FilterState<25u, 4, 6, 1, 0> > >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:47:7:[m[K   required from â€˜[01m[Kclass rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_rosbag_loader.cpp:87:42:[m[K   required from here
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/PoseUpdate.hpp:227:8:[m[K [01;31m[Kerror: [m[Kconflicting return type specified for â€˜[01m[Kvoid rovio::PoseUpdate<FILTERSTATE, inertialPoseIndex, bodyPoseIndex>::evalInnovation(rovio::PoseUpdate<FILTERSTATE, inertialPoseIndex, bodyPoseIndex>::mtInnovation&, const mtState&, const mtNoise&) const [with FILTERSTATE = rovio::FilterState<25u, 4, 6, 1, 0>; int inertialPoseIndex = -1; int bodyPoseIndex = -1; rovio::PoseUpdate<FILTERSTATE, inertialPoseIndex, bodyPoseIndex>::mtInnovation = rovio::PoseInnovation; rovio::PoseUpdate<FILTERSTATE, inertialPoseIndex, bodyPoseIndex>::mtState = rovio::State<25u, 4, 6, 1, 0>; rovio::PoseUpdate<FILTERSTATE, inertialPoseIndex, bodyPoseIndex>::mtNoise = rovio::PoseUpdateNoise][m[Kâ€™
   void evalInnovation(mtInnovation& y, const mtState& state, const mtNoise& noise) const{
[01;32m[K        ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ImgUpdate.hpp:33:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:35[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_rosbag_loader.cpp:37[m[K:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/Update.hpp:158:16:[m[K [01;31m[Kerror: [m[K  overriding â€˜[01m[Kbool LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::evalInnovation(LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtInnovation&, const mtState&, const mtNoise&) const [with Innovation = rovio::PoseInnovation; FilterState = rovio::FilterState<25u, 4, 6, 1, 0>; Meas = rovio::PoseUpdateMeas; Noise = rovio::PoseUpdateNoise; OutlierDetection = rovio::PoseOutlierDetection; bool isCoupled = false; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtInnovation = rovio::PoseInnovation; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtState = rovio::State<25u, 4, 6, 1, 0>; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtNoise = rovio::PoseUpdateNoise][m[Kâ€™
   virtual bool evalInnovation(mtInnovation& y, const mtState& state, const mtNoise& noise) const = 0;
[01;32m[K                ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:37:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_rosbag_loader.cpp:37[m[K:
/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/VelocityUpdate.hpp: In instantiation of â€˜[01m[Kclass rovio::VelocityUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >[m[Kâ€™:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/FilterBase.hpp:90:64:[m[K   required from â€˜[01m[Kclass LWF::FilterBase<rovio::ImuPrediction<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::ImgUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::PoseUpdate<rovio::FilterState<25u, 4, 6, 1, 0>, -1, -1>, rovio::VelocityUpdate<rovio::FilterState<25u, 4, 6, 1, 0> > >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:47:7:[m[K   required from â€˜[01m[Kclass rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> >[m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_rosbag_loader.cpp:87:42:[m[K   required from here
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/VelocityUpdate.hpp:166:8:[m[K [01;31m[Kerror: [m[Kconflicting return type specified for â€˜[01m[Kvoid rovio::VelocityUpdate<FILTERSTATE>::evalInnovation(rovio::VelocityUpdate<FILTERSTATE>::mtInnovation&, const mtState&, const mtNoise&) const [with FILTERSTATE = rovio::FilterState<25u, 4, 6, 1, 0>; rovio::VelocityUpdate<FILTERSTATE>::mtInnovation = rovio::VelocityInnovation; rovio::VelocityUpdate<FILTERSTATE>::mtState = rovio::State<25u, 4, 6, 1, 0>; rovio::VelocityUpdate<FILTERSTATE>::mtNoise = rovio::VelocityUpdateNoise][m[Kâ€™
   void evalInnovation(mtInnovation& y, const mtState& state, const mtNoise& noise) const{
[01;32m[K        ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/ImgUpdate.hpp:33:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:35[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_rosbag_loader.cpp:37[m[K:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/Update.hpp:158:16:[m[K [01;31m[Kerror: [m[K  overriding â€˜[01m[Kbool LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::evalInnovation(LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtInnovation&, const mtState&, const mtNoise&) const [with Innovation = rovio::VelocityInnovation; FilterState = rovio::FilterState<25u, 4, 6, 1, 0>; Meas = rovio::VelocityUpdateMeas; Noise = rovio::VelocityUpdateNoise; OutlierDetection = rovio::VelocityOutlierDetection; bool isCoupled = false; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtInnovation = rovio::VelocityInnovation; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtState = rovio::State<25u, 4, 6, 1, 0>; LWF::Update<Innovation, FilterState, Meas, Noise, OutlierDetection, isCoupled>::mtNoise = rovio::VelocityUpdateNoise][m[Kâ€™
   virtual bool evalInnovation(mtInnovation& y, const mtState& state, const mtNoise& noise) const = 0;
[01;32m[K                ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_rosbag_loader.cpp:38:0[m[K:
/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioNode.hpp: In instantiation of â€˜[01m[Kvoid rovio::RovioNode<FILTER>::updateAndPublish() [with FILTER = rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> >][m[Kâ€™:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioNode.hpp:447:23:[m[K   required from â€˜[01m[Kvoid rovio::RovioNode<FILTER>::imuCallback(const ConstPtr&) [with FILTER = rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> >; sensor_msgs::Imu_<std::allocator<void> >::ConstPtr = boost::shared_ptr<const sensor_msgs::Imu_<std::allocator<void> > >][m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_rosbag_loader.cpp:184:55:[m[K   required from here
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioNode.hpp:643:9:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> >::updateSafe(double*)[m[Kâ€™
         mpFilter_->updateSafe(&lastImageTime);
[01;32m[K         ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:33:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_rosbag_loader.cpp:37[m[K:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/FilterBase.hpp:189:8:[m[K [01;36m[Knote: [m[Kcandidate: void LWF::FilterBase<Prediction, Updates>::updateSafe() [with Prediction = rovio::ImuPrediction<rovio::FilterState<25u, 4, 6, 1, 0> >; Updates = {rovio::ImgUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::PoseUpdate<rovio::FilterState<25u, 4, 6, 1, 0>, -1, -1>, rovio::VelocityUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >}]
   void updateSafe() {
[01;32m[K        ^[m[K
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/FilterBase.hpp:189:8:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_node.cpp:42:0[m[K:
/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioNode.hpp: In instantiation of â€˜[01m[Kvoid rovio::RovioNode<FILTER>::updateAndPublish() [with FILTER = rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> >][m[Kâ€™:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioNode.hpp:447:23:[m[K   required from â€˜[01m[Kvoid rovio::RovioNode<FILTER>::imuCallback(const ConstPtr&) [with FILTER = rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> >; sensor_msgs::Imu_<std::allocator<void> >::ConstPtr = boost::shared_ptr<const sensor_msgs::Imu_<std::allocator<void> > >][m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioNode.hpp:208:43:[m[K   required from â€˜[01m[Krovio::RovioNode<FILTER>::RovioNode(ros::NodeHandle&, ros::NodeHandle&, std::shared_ptr<_Tp1>) [with FILTER = rovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> >][m[Kâ€™
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_node.cpp:113:64:[m[K   required from here
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioNode.hpp:643:9:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krovio::RovioFilter<rovio::FilterState<25u, 4, 6, 1, 0> >::updateSafe(double*)[m[Kâ€™
         mpFilter_->updateSafe(&lastImageTime);
[01;32m[K         ^[m[K
In file included from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/include/rovio/RovioFilter.hpp:33:0[m[K,
                 from [01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/rovio/src/rovio_node.cpp:41[m[K:
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/FilterBase.hpp:189:8:[m[K [01;36m[Knote: [m[Kcandidate: void LWF::FilterBase<Prediction, Updates>::updateSafe() [with Prediction = rovio::ImuPrediction<rovio::FilterState<25u, 4, 6, 1, 0> >; Updates = {rovio::ImgUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >, rovio::PoseUpdate<rovio::FilterState<25u, 4, 6, 1, 0>, -1, -1>, rovio::VelocityUpdate<rovio::FilterState<25u, 4, 6, 1, 0> >}]
   void updateSafe() {
[01;32m[K        ^[m[K
[01m[K/home/ubuntu/coding/ethz_asl_UAV_autonomous/src/dependents/maplab_lightweight_filtering/include/lightweight_filtering/FilterBase.hpp:189:8:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
make[2]: *** [CMakeFiles/rovio_node.dir/src/rovio_node.cpp.o] Error 1
make[1]: *** [CMakeFiles/rovio_node.dir/all] Error 2
make[2]: *** [CMakeFiles/rovio_rosbag_loader.dir/src/rovio_rosbag_loader.cpp.o] Error 1
make[1]: *** [CMakeFiles/rovio_rosbag_loader.dir/all] Error 2
make: *** [all] Error 2
